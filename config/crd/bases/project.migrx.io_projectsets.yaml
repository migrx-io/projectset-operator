---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: projectsets.project.migrx.io
spec:
  group: project.migrx.io
  names:
    kind: ProjectSet
    listKind: ProjectSetList
    plural: projectsets
    shortNames:
    - ps
    - prjs
    singular: projectset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The status
      jsonPath: .status.conditions[-1:].type
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProjectSet is the Schema for the projectsets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProjectSetSpec defines the desired state of ProjectSet
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Custom namespace annotations
                type: object
              groupPermissions:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: User permissions
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Custom namespace labels
                type: object
              limitRange:
                description: LimitRange specification
                properties:
                  limits:
                    description: Limits is the list of LimitRangeItem objects that
                      are enforced.
                    items:
                      description: LimitRangeItem defines a min/max usage limit for
                        any resource that matches on kind.
                      properties:
                        default:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Default resource requirement limit value by
                            resource name if resource limit is omitted.
                          type: object
                        defaultRequest:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: DefaultRequest is the default resource requirement
                            request value by resource name if resource request is
                            omitted.
                          type: object
                        max:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Max usage constraints on this kind by resource
                            name.
                          type: object
                        maxLimitRequestRatio:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: MaxLimitRequestRatio if specified, the named
                            resource must have a request and limit that are both non-zero
                            where limit divided by request is less than or equal to
                            the enumerated value; this represents the max burst for
                            the named resource.
                          type: object
                        min:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Min usage constraints on this kind by resource
                            name.
                          type: object
                        type:
                          description: Type of resource that this limit applies to.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                required:
                - limits
                type: object
              namespace:
                description: Namespace name
                type: string
              policySpec:
                additionalProperties:
                  description: NetworkPolicySpec provides the specification of a NetworkPolicy
                  properties:
                    egress:
                      description: egress is a list of egress rules to be applied
                        to the selected pods. Outgoing traffic is allowed if there
                        are no NetworkPolicies selecting the pod (and cluster policy
                        otherwise allows the traffic), OR if the traffic matches at
                        least one egress rule across all of the NetworkPolicy objects
                        whose podSelector matches the pod. If this field is empty
                        then this NetworkPolicy limits all outgoing traffic (and serves
                        solely to ensure that the pods it selects are isolated by
                        default). This field is beta-level in 1.8
                      items:
                        description: NetworkPolicyEgressRule describes a particular
                          set of traffic that is allowed out of pods matched by a
                          NetworkPolicySpec's podSelector. The traffic must match
                          both ports and to. This type is beta-level in 1.8
                        properties:
                          ports:
                            description: ports is a list of destination ports for
                              outgoing traffic. Each item in this list is combined
                              using a logical OR. If this field is empty or missing,
                              this rule matches all ports (traffic not restricted
                              by port). If this field is present and contains at least
                              one item, then this rule allows traffic only if the
                              traffic matches at least one port in the list.
                            items:
                              description: NetworkPolicyPort describes a port to allow
                                traffic on
                              properties:
                                endPort:
                                  description: endPort indicates that the range of
                                    ports from port to endPort if set, inclusive,
                                    should be allowed by the policy. This field cannot
                                    be defined if the port field is not defined or
                                    if the port field is defined as a named (string)
                                    port. The endPort must be equal or greater than
                                    port.
                                  format: int32
                                  type: integer
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: port represents the port on the given
                                    protocol. This can either be a numerical or named
                                    port on a pod. If this field is not provided,
                                    this matches all port names and numbers. If present,
                                    only traffic on the specified protocol AND port
                                    will be matched.
                                  x-kubernetes-int-or-string: true
                                protocol:
                                  default: TCP
                                  description: protocol represents the protocol (TCP,
                                    UDP, or SCTP) which traffic must match. If not
                                    specified, this field defaults to TCP.
                                  type: string
                              type: object
                            type: array
                          to:
                            description: to is a list of destinations for outgoing
                              traffic of pods selected for this rule. Items in this
                              list are combined using a logical OR operation. If this
                              field is empty or missing, this rule matches all destinations
                              (traffic not restricted by destination). If this field
                              is present and contains at least one item, this rule
                              allows traffic only if the traffic matches at least
                              one item in the to list.
                            items:
                              description: NetworkPolicyPeer describes a peer to allow
                                traffic to/from. Only certain combinations of fields
                                are allowed
                              properties:
                                ipBlock:
                                  description: ipBlock defines policy on a particular
                                    IPBlock. If this field is set then neither of
                                    the other fields can be.
                                  properties:
                                    cidr:
                                      description: cidr is a string representing the
                                        IPBlock Valid examples are "192.168.1.0/24"
                                        or "2001:db8::/64"
                                      type: string
                                    except:
                                      description: except is a slice of CIDRs that
                                        should not be included within an IPBlock Valid
                                        examples are "192.168.1.0/24" or "2001:db8::/64"
                                        Except values will be rejected if they are
                                        outside the cidr range
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - cidr
                                  type: object
                                namespaceSelector:
                                  description: "namespaceSelector selects namespaces
                                    using cluster-scoped labels. This field follows
                                    standard label selector semantics; if present
                                    but empty, it selects all namespaces. \n If podSelector
                                    is also set, then the NetworkPolicyPeer as a whole
                                    selects the pods matching podSelector in the namespaces
                                    selected by namespaceSelector. Otherwise it selects
                                    all pods in the namespaces selected by namespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                podSelector:
                                  description: "podSelector is a label selector which
                                    selects pods. This field follows standard label
                                    selector semantics; if present but empty, it selects
                                    all pods. \n If namespaceSelector is also set,
                                    then the NetworkPolicyPeer as a whole selects
                                    the pods matching podSelector in the Namespaces
                                    selected by NamespaceSelector. Otherwise it selects
                                    the pods matching podSelector in the policy's
                                    own namespace."
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            type: array
                        type: object
                      type: array
                    ingress:
                      description: ingress is a list of ingress rules to be applied
                        to the selected pods. Traffic is allowed to a pod if there
                        are no NetworkPolicies selecting the pod (and cluster policy
                        otherwise allows the traffic), OR if the traffic source is
                        the pod's local node, OR if the traffic matches at least one
                        ingress rule across all of the NetworkPolicy objects whose
                        podSelector matches the pod. If this field is empty then this
                        NetworkPolicy does not allow any traffic (and serves solely
                        to ensure that the pods it selects are isolated by default)
                      items:
                        description: NetworkPolicyIngressRule describes a particular
                          set of traffic that is allowed to the pods matched by a
                          NetworkPolicySpec's podSelector. The traffic must match
                          both ports and from.
                        properties:
                          from:
                            description: from is a list of sources which should be
                              able to access the pods selected for this rule. Items
                              in this list are combined using a logical OR operation.
                              If this field is empty or missing, this rule matches
                              all sources (traffic not restricted by source). If this
                              field is present and contains at least one item, this
                              rule allows traffic only if the traffic matches at least
                              one item in the from list.
                            items:
                              description: NetworkPolicyPeer describes a peer to allow
                                traffic to/from. Only certain combinations of fields
                                are allowed
                              properties:
                                ipBlock:
                                  description: ipBlock defines policy on a particular
                                    IPBlock. If this field is set then neither of
                                    the other fields can be.
                                  properties:
                                    cidr:
                                      description: cidr is a string representing the
                                        IPBlock Valid examples are "192.168.1.0/24"
                                        or "2001:db8::/64"
                                      type: string
                                    except:
                                      description: except is a slice of CIDRs that
                                        should not be included within an IPBlock Valid
                                        examples are "192.168.1.0/24" or "2001:db8::/64"
                                        Except values will be rejected if they are
                                        outside the cidr range
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - cidr
                                  type: object
                                namespaceSelector:
                                  description: "namespaceSelector selects namespaces
                                    using cluster-scoped labels. This field follows
                                    standard label selector semantics; if present
                                    but empty, it selects all namespaces. \n If podSelector
                                    is also set, then the NetworkPolicyPeer as a whole
                                    selects the pods matching podSelector in the namespaces
                                    selected by namespaceSelector. Otherwise it selects
                                    all pods in the namespaces selected by namespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                podSelector:
                                  description: "podSelector is a label selector which
                                    selects pods. This field follows standard label
                                    selector semantics; if present but empty, it selects
                                    all pods. \n If namespaceSelector is also set,
                                    then the NetworkPolicyPeer as a whole selects
                                    the pods matching podSelector in the Namespaces
                                    selected by NamespaceSelector. Otherwise it selects
                                    the pods matching podSelector in the policy's
                                    own namespace."
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            type: array
                          ports:
                            description: ports is a list of ports which should be
                              made accessible on the pods selected for this rule.
                              Each item in this list is combined using a logical OR.
                              If this field is empty or missing, this rule matches
                              all ports (traffic not restricted by port). If this
                              field is present and contains at least one item, then
                              this rule allows traffic only if the traffic matches
                              at least one port in the list.
                            items:
                              description: NetworkPolicyPort describes a port to allow
                                traffic on
                              properties:
                                endPort:
                                  description: endPort indicates that the range of
                                    ports from port to endPort if set, inclusive,
                                    should be allowed by the policy. This field cannot
                                    be defined if the port field is not defined or
                                    if the port field is defined as a named (string)
                                    port. The endPort must be equal or greater than
                                    port.
                                  format: int32
                                  type: integer
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: port represents the port on the given
                                    protocol. This can either be a numerical or named
                                    port on a pod. If this field is not provided,
                                    this matches all port names and numbers. If present,
                                    only traffic on the specified protocol AND port
                                    will be matched.
                                  x-kubernetes-int-or-string: true
                                protocol:
                                  default: TCP
                                  description: protocol represents the protocol (TCP,
                                    UDP, or SCTP) which traffic must match. If not
                                    specified, this field defaults to TCP.
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    podSelector:
                      description: podSelector selects the pods to which this NetworkPolicy
                        object applies. The array of ingress rules is applied to any
                        pods selected by this field. Multiple network policies can
                        select the same set of pods. In this case, the ingress rules
                        for each are combined additively. This field is NOT optional
                        and follows standard label selector semantics. An empty podSelector
                        matches all pods in this namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    policyTypes:
                      description: policyTypes is a list of rule types that the NetworkPolicy
                        relates to. Valid options are ["Ingress"], ["Egress"], or
                        ["Ingress", "Egress"]. If this field is not specified, it
                        will default based on the existence of ingress or egress rules;
                        policies that contain an egress section are assumed to affect
                        egress, and all policies (whether or not they contain an ingress
                        section) are assumed to affect ingress. If you want to write
                        an egress-only policy, you must explicitly specify policyTypes
                        [ "Egress" ]. Likewise, if you want to write a policy that
                        specifies that no egress is allowed, you must specify a policyTypes
                        value that include "Egress" (since such a policy would not
                        include an egress section and would otherwise default to just
                        [ "Ingress" ]). This field is beta-level in 1.8
                      items:
                        description: PolicyType string describes the NetworkPolicy
                          type This type is beta-level in 1.8
                        type: string
                      type: array
                  required:
                  - podSelector
                  type: object
                description: Network Policy specitifation
                type: object
              resourceQuota:
                description: ResourceQuota specification
                properties:
                  hard:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'hard is the set of desired hard limits for each
                      named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                    type: object
                  scopeSelector:
                    description: scopeSelector is also a collection of filters like
                      scopes that must match each object tracked by a quota but expressed
                      using ScopeSelectorOperator in combination with possible values.
                      For a resource to match, both scopes AND scopeSelector (if specified
                      in spec), must be matched.
                    properties:
                      matchExpressions:
                        description: A list of scope selector requirements by scope
                          of the resources.
                        items:
                          description: A scoped-resource selector requirement is a
                            selector that contains values, a scope name, and an operator
                            that relates the scope name and values.
                          properties:
                            operator:
                              description: Represents a scope's relationship to a
                                set of values. Valid operators are In, NotIn, Exists,
                                DoesNotExist.
                              type: string
                            scopeName:
                              description: The name of the scope that the selector
                                applies to.
                              type: string
                            values:
                              description: An array of string values. If the operator
                                is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during
                                a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - operator
                          - scopeName
                          type: object
                        type: array
                    type: object
                    x-kubernetes-map-type: atomic
                  scopes:
                    description: A collection of filters that must match each object
                      tracked by a quota. If not specified, the quota matches all
                      objects.
                    items:
                      description: A ResourceQuotaScope defines a filter that must
                        match each object tracked by a quota
                      type: string
                    type: array
                type: object
              roleRules:
                additionalProperties:
                  items:
                    description: PolicyRule holds information that describes a policy
                      rule, but does not contain information about who the rule applies
                      to or which namespace the rule applies to.
                    properties:
                      apiGroups:
                        description: APIGroups is the name of the APIGroup that contains
                          the resources.  If multiple API groups are specified, any
                          action requested against one of the enumerated resources
                          in any API group will be allowed. "" represents the core
                          API group and "*" represents all API groups.
                        items:
                          type: string
                        type: array
                      nonResourceURLs:
                        description: NonResourceURLs is a set of partial urls that
                          a user should have access to.  *s are allowed, but only
                          as the full, final step in the path Since non-resource URLs
                          are not namespaced, this field is only applicable for ClusterRoles
                          referenced from a ClusterRoleBinding. Rules can either apply
                          to API resources (such as "pods" or "secrets") or non-resource
                          URL paths (such as "/api"),  but not both.
                        items:
                          type: string
                        type: array
                      resourceNames:
                        description: ResourceNames is an optional white list of names
                          that the rule applies to.  An empty set means that everything
                          is allowed.
                        items:
                          type: string
                        type: array
                      resources:
                        description: Resources is a list of resources this rule applies
                          to. '*' represents all resources.
                        items:
                          type: string
                        type: array
                      verbs:
                        description: Verbs is a list of Verbs that apply to ALL the
                          ResourceKinds contained in this rule. '*' represents all
                          verbs.
                        items:
                          type: string
                        type: array
                    required:
                    - verbs
                    type: object
                  type: array
                description: RBAC Role Rules
                type: object
              templates:
                description: ProjectSet templates
                items:
                  type: string
                type: array
            required:
            - namespace
            type: object
          status:
            description: ProjectSetStatus defines the observed state of ProjectSet
            properties:
              conditions:
                description: Conditions store the status conditions of the instances
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
